--Add Users
CREATE USER AOM_USERS
IDENTIFIED BY *****
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

CREATE USER CGF_USERS
IDENTIFIED BY *****
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

CREATE USER TEST_USERS
IDENTIFIED BY test12345
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;


CREATE USER ABMF_USERS
IDENTIFIED BY *****
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

CREATE USER NS_USERS
IDENTIFIED BY *****
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;




--GRANT LOGONS
GRANT CONNECT, RESOURCE TO AOM_USERS,CGF_USERS,ABMF_USERS,NS_USERS,TEST_USERS;
GRANT CREATE SESSION TO AOM_USERS,CGF_USERS,ABMF_USERS,NS_USERS,TEST_USERS;


--GET QUERY TO GRANT AUTH
SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON ' || owner || '.' || table_name || ' TO AMBF_USERS;'
FROM dba_tables
WHERE tablespace_name = 'USERS';


--BEGIN AUTHORIZE USERS TO TABLES
GRANT EXECUTE ON SYSTEM.get_my_dml_logs TO AOM_USERS,CGF_USERS,ABMF_USERS;

GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.SUBSCRIPTION_PACKAGES TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.BALANCE TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.CUSTOMER TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.PERSONAL_USAGE TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.NOTIFICATION_LOGS TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.LOGIN_HISTORY TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.PASSWORD_RESET_CODES TO TEST_USERS;
GRANT SELECT, INSERT , UPDATE, DELETE ON SYSTEM.INVOICE TO TEST_USERS;

GRANT EXECUTE ON SYSTEM.insert_package TO AOM_USERS,CGF_USERS,ABMF_USERS;
GRANT EXECUTE ON SYSTEM.insert_balance TO AOM_USERS,CGF_USERS,ABMF_USERS;
GRANT EXECUTE ON SYSTEM.insert_customer TO AOM_USERS,CGF_USERS,ABMF_USERS;
GRANT EXECUTE ON SYSTEM.insert_personal_usage TO AOM_USERS,CGF_USERS,ABMF_USERS;
GRANT EXECUTE ON SYSTEM.insert_notification_log TO AOM_USERS,CGF_USERS,ABMF_USERS;
GRANT EXECUTE ON SYSTEM.insert_login_history TO AOM_USERS,CGF_USERS,ABMF_USERS;
GRANT SELECT ON SYSTEM.my_dml_logs TO AOM_USERS,CGF_USERS,ABMF_USERS;

GRANT EXECUTE ON SYSTEM.LOGIN_CUSTOMER TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.register_customer TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.get_package TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.get_all_packages TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.add_new_balance TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.get_customer_by_id TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.get_msisdns_haspackage TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.get_balance TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.insert_password_reset_code TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.verify_password_reset_code TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.change_customer_password TO AOM_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.get_customer_invoices TO AOM_USERS,TEST_USERS;

GRANT EXECUTE ON SYSTEM.get_customer TO NS_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.log_notification TO NS_USERS,TEST_USERS;

GRANT EXECUTE ON SYSTEM.insert_personal_usage TO CGF_USERS,TEST_USERS;

GRANT EXECUTE ON SYSTEM.get_balance TO ABMF_USERS,TEST_USERS;
GRANT EXECUTE ON SYSTEM.update_balance_all TO ABMF_USERS,TEST_USERS;

GRANT EXECUTE ON SYSTEM.get_last_30_logs_by_user TO AOM_USERS,NS_USERS,CGF_USERS,ABMF_USERS,TEST_USERS;

GRANT EXECUTE ON SYSTEM.get_error_logs_by_user TO AOM_USERS,NS_USERS,CGF_USERS,ABMF_USERS,TEST_USERS;


--END AUTHORIZE USERS TO TABLES

--CHECK USER LOGS
SELECT * FROM DBA_AUDIT_TRAIL ORDER BY TIMESTAMP DESC;

SELECT * FROM UNIFIED_AUDIT_TRAIL
ORDER BY EVENT_TIMESTAMP DESC; --Admin işlemlerinin logları


SELECT username, machine, osuser, logon_time
FROM v$session
WHERE username IS NOT NULL;

SELECT username, userhost, terminal, to_char(timestamp, 'YYYY-MM-DD HH24:MI:SS') AS login_time, returncode
FROM dba_audit_session
ORDER BY timestamp DESC;
